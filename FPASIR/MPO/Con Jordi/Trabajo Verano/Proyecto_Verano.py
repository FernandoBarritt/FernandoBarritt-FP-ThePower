# --- SECCI√ìN 1: CONFIGURACI√ìN Y DATOS ---

# Las preguntas
def cargar_preguntas():
    return [
        {
            "pregunta": " 1- Qu√© n√∫mero llevaba Messi cuando jugaba en el Barcelona",
            "opciones": ["A. 1", "B. 54", "C. 10", "D. 30"],
            "respuesta_correcta": "C"
        },
        {
            "pregunta": " 2- Cu√°l es el r√≠o m√°s largo de Espa√±a",
            "opciones": ["A. Tajo", "B. Ebro", "C. Guadalquivir", "D. Tinto"],
            "respuesta_correcta": "A"
        },
        {
            "pregunta": " 3- ¬øCu√°l es la capital de Australia?",
            "opciones": ["A. S√≠dney", "B. Melbourne", "C. Canberra", "D. Brisbane"],
            "respuesta_correcta": "C"
        },
        {
            "pregunta": " 4- ¬øQui√©n escribi√≥ 'Cien a√±os de soledad'?",
            "opciones": ["A. Mario Vargas Llosa", "B. Gabriel Garc√≠a M√°rquez", "C. Julio Cort√°zar", "D. Isabel Allende"],
            "respuesta_correcta": "B"
        },
        {
            "pregunta": " 5- ¬øQu√© planeta es el m√°s cercano al Sol?",
            "opciones": ["A. Venus", "B. Mercurio", "C. Marte", "D. Tierra"],
            "respuesta_correcta": "B"
        },
        {
            "pregunta": " 6- ¬øEn qu√© a√±o comenz√≥ la Segunda Guerra Mundial?",
            "opciones": ["A. 1935", "B. 1937", "C. 1939", "D. 1941"],
            "respuesta_correcta": "C"
        },
        {
            "pregunta": " 7- ¬øCu√°l es el resultado de 9 x 8?",
            "opciones": ["A. 72", "B. 81", "C. 64", "D. 70"],
            "respuesta_correcta": "A"
        }
    ]

# Para que funcione aunque a√±ada o quite preguntas del listado. Se usar√° para la evaluaci√≥n final
numero_de_preguntas = int(len(cargar_preguntas()))


# --- SECCI√ìN 2: FUNCIONES AUXILIARES ---

# Pedimos el nombre del usuario para guardar su puntuaci√≥n luego
def pedir_nombre_usuario():
    nombre = input("Introduce tu nombre: ").strip()
    while not nombre:
        nombre = input("El nombre no puede estar vac√≠o. Introduce tu nombre: ").strip()
    return nombre

# Muestra una pregunta con sus opciones
def mostrar_pregunta(una_pregunta):
    print("\n" + una_pregunta["pregunta"])
    for opcion in una_pregunta["opciones"]:
        print(opcion)

# Pide una respuesta v√°lida: A, B, C o D
def obtener_respuesta():
    while True:
        respuesta = input("Tu respuesta (A, B, C, D) es: ")
        respuesta = respuesta.strip().upper()
        if respuesta in ["A", "B", "C", "D"]:
            return respuesta
        else:
            print("Opci√≥n no v√°lida. Int√©ntelo de nuevo.")

# Devuelve True si el usuario acierta, si no, le dice la correcta
def comprobar_respuesta(respuesta_usuario, respuesta_correcta):
    if respuesta_usuario == respuesta_correcta:
        print(" ‚úÖ Correcto, pero ha sido suerte")
        return True
    else:
        print(f" ‚ùå Incorrecto, in√∫til. La respuesta correcta era: {respuesta_correcta}\n")
        return False

# Al final del test, muestra los resultados y valoraci√≥n
def resultados_finales():
    print("\n### RESULTADOS FINALES ###")
    print(f"N√∫mero de aciertos: {aciertos}")
    print(f"N√∫mero total de preguntas: {numero_de_preguntas}")
    porcentaje = int((aciertos / numero_de_preguntas) * 100)
    print(f"Porcentaje de aciertos: {porcentaje}%")
    if porcentaje >= 80:
        print("üî• Est√°s hech@ una bestia, ¬°bien hecho! üî•")
    elif porcentaje >= 50:
        print("ü§∑üèª‚Äç‚ôÇÔ∏è Bueno, no est√° mal. Podr√≠a estar mejor, pero podr√≠a estar mucho peor ü§∑üèª‚Äç‚ôÇÔ∏è")
    else:
        print("ü§° Vuelve a primaria por el bien de la sociedad, por favor ü§°")

# Guarda en archivo el nombre y la puntuaci√≥n final
def guardar_resultado(nombre, aciertos, total):
    with open("ranking.txt", "a") as f:
        f.write(f"{nombre}, {aciertos}/{total}\n")


# --- SECCI√ìN 3: L√ìGICA PRINCIPAL DEL CUESTIONARIO ---

# Funci√≥n principal que ejecuta el cuestionario
def empezar_cuestionario(nombre_usuario):
    global aciertos  # Se usa global para poder mostrarlo despu√©s en resultados_finales
    aciertos = 0
    preguntas = cargar_preguntas()
    for pregunta in preguntas:
        mostrar_pregunta(pregunta)
        respuesta = obtener_respuesta()
        if comprobar_respuesta(respuesta, pregunta["respuesta_correcta"]):
            aciertos += 1
    resultados_finales()
    guardar_resultado(nombre_usuario, aciertos, numero_de_preguntas)


# --- SECCI√ìN 4: MEN√ö PRINCIPAL Y EJECUCI√ìN ---

# Funci√≥n principal que muestra el men√∫ al usuario y gestiona la elecci√≥n de opciones
def menu():
    while True:
        print("### MENU ###")
        print("1. Empezar Cuestionario")
        print("2. Ranking")
        print("3. Salir")
        try:
            seleccion_menu = int(input("Seleccione una de las opciones del men√∫ indicando su n√∫mero: "))
        except ValueError:
            print("Entrada no v√°lida. Solo se aceptan n√∫meros")
            continue  # Si da error, vuelve a mostrar el men√∫
    #Funcionalidad de las opciones del men√∫
        if seleccion_menu == 1:
            nombre_usuario = pedir_nombre_usuario()  # Guardo nombre antes de empezar para el ranking
            empezar_cuestionario(nombre_usuario)
        elif seleccion_menu == 2:
            try:
                with open("ranking.txt", "r") as ranking_archivo:
                    ranking_archivo = ranking_archivo.read()
                    #Si el archivo est√° vac√≠o o solo hay espacios
                    if not ranking_archivo.strip():
                        print("El archivo est√° vac√≠o. ¬°Juega para a√±adir el primer resultado! \n")
                    else:
                        print("### RANKING HIST√ìRICO ###")
                        print(ranking_archivo)
            #Si no existe el archivo
            except FileNotFoundError:
                print("El ranking no se ha creado todav√≠a. Juegue para inicializar el ranking")




        elif seleccion_menu == 3:
            print("Saliendo del programa...")
            break
        else:
            print("Opci√≥n no v√°lida. Solo se permite 1 o 2")

# Arranca el programa desde aqu√≠
menu()